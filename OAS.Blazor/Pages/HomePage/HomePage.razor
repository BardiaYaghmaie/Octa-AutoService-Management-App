@page "/"
@using AlignItems = Radzen.AlignItems
@using DialogOptions = Radzen.DialogOptions
@using DialogService = Radzen.DialogService
@using OAS.Blazor.Pages.Shared
@using OAS.Blazor.Pages.Invoices
@inject DialogService DialogService

@*@using System.Net.Http.Json*@
@*@inject HttpClient httpClient*@


<PageTitle>صفحه اصلی</PageTitle>

<RadzenRow AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
    <RadzenColumn>
            <RadzenButton Click=@OpenRegisterCustomer Text="ثبت مشتری" Icon="add" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Large"/>
    </RadzenColumn>
    <RadzenColumn>
            <RadzenButton Click=@OpenVehicleEntrance Text="ورود ماشین" Icon="arrow_back" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Large"/>
    </RadzenColumn>
</RadzenRow>

<br />
<RadzenRow AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
    <RadzenDataGrid Data="@Elements" TItem="HomePageReportModel" AllowVirtualization="false" Style="height:400px"
                    AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                    AllowSorting="true">
        <Columns>
            <RadzenDataGridColumn TItem="HomePageReportModel" Property="RowNumber" Title="ردیف" />
            <RadzenDataGridColumn TItem="HomePageReportModel" Property="CustomerName" Title="نام مشتری" />
            <RadzenDataGridColumn TItem="HomePageReportModel" Property="Vehicle" Title="خودرو" />
            <RadzenDataGridColumn TItem="HomePageReportModel" Property="Vehicle" Title="عملیات" />
        </Columns>
    </RadzenDataGrid>
   
</RadzenRow>
<RadzenButton Click=@OpenDeleteConfirmation ButtonStyle="ButtonStyle.Dark"/>
<RadzenButton Click=@OpenPaySellInvoice ButtonStyle="ButtonStyle.Secondary"/>

@code {

    public async Task OpenRegisterCustomer()
    {
        await DialogService.OpenAsync<RegisterCustomerDialog>("ثبت مشتری",
            new Dictionary<string, object>(),
            new DialogOptions() { Width = "950px", Height = "512px",
                Draggable = false, AutoFocusFirstElement = false, CloseDialogOnOverlayClick = true});

    }
    public async Task OpenVehicleEntrance()
    {
        await DialogService.OpenAsync<VehicleEntranceDialog>("ورود خودرو",
            new Dictionary<string, object>(),
            new DialogOptions() { Width = "550px", Height = "260px",
                Draggable = false, AutoFocusFirstElement = false, CloseDialogOnOverlayClick = true});

    }

    string InvoiceCode = "39204";
    public async Task OpenDeleteConfirmation()
    {
        await DialogService.OpenAsync<InvoiceDeleteConfirmationDialog>("حذف فاکتور",
            new Dictionary<string, object>(){{"InvoiceCode", InvoiceCode}},

    new DialogOptions() { Width = "550px", Height = "260px",
                Draggable = false, AutoFocusFirstElement = false, CloseDialogOnOverlayClick = true});

    }
    public async Task OpenPaySellInvoice()
    {
        await DialogService.OpenAsync<PaySellInvoiceDialog>("پرداخت فاکتور ",
            new Dictionary<string, object>(){},

            new DialogOptions() { Width = "700px", Height = "500px",
                Draggable = false, AutoFocusFirstElement = false, CloseDialogOnOverlayClick = true});

    }

    private void OnClick(string text)
    {
    //
    }
    public class HomePageReportModel
    {
        public int RowNumber { get; set; }
        public string CustomerName { get; set; }
        public string Vehicle { get; set; }
    }
    private List<HomePageReportModel> Elements = new()
    {
        new (){RowNumber = 1,Vehicle= "تیبا تیپ 2 نوک مدادی",CustomerName = "محمد یوسفیان"},
        new (){RowNumber = 2,Vehicle= "پراید E131 زرشکی",CustomerName = "بردیا یغمایی"},
    };



    //protected override async Task OnInitializedAsync()
    //{
    //    Elements = await httpClient.GetFromJsonAsync<List<HomePageReportModel>>("webapi/periodictable");
    //}
}
