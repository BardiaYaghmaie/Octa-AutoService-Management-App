@using OAS.Application.DomainModels;
@using OAS.Application.Features.CustomerFeatures.AddCustomer;
@using Variant = Radzen.Variant
@using AlignItems = Radzen.AlignItems
@inject Radzen.DialogService dialogService
@inject MediatR.IMediator mediator;
@inject NavigationManager navigationManager;
<MudRTLProvider RightToLeft="true">
    <RadzenTemplateForm TItem="AddCustomerModel" Data="newCustomerModel" Submit="OnSubmitNewCustomer" InvalidSubmit="OnInvalidSubmitNewCustomer">
        <RadzenRow>
            <RadzenColumn>

                <RadzenRow>
                    <RadzenColumn Size="6">
                        <RadzenFormField Text="نام" Variant="Variant.Outlined">
                            <RadzenTextBox Name="FirstName" @bind-Value="newCustomerModel.FirstName" />
                            <RadzenRequiredValidator Component="FirstName" Text="نام مشتری را وارد کنید" Popup=@popup Style="position: absolute;top:40px" />
                        </RadzenFormField>
                    </RadzenColumn>
                    <RadzenColumn Size="6">
                        <RadzenFormField Text="نام خانوادگی" Variant="Variant.Outlined">
                            <RadzenTextBox Name="LastName" @bind-Value="newCustomerModel.LastName" />
                            <RadzenRequiredValidator Component="LastName" Text="نام خانوادگی مشتری  را وارد کنید" Popup=@popup Style="position: absolute;top:40px" />
                        </RadzenFormField>
                    </RadzenColumn>
                </RadzenRow>
                <br />
                <RadzenRow AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                        <RadzenFormField Text="موبایل" Variant="Variant.Outlined">
                            <RadzenTextBox Name="PhoneNumber" @bind-Value="@newCustomerModel.PhoneNumber" />
                            <RadzenRequiredValidator Component="PhoneNumber" Text="شماره موبایل مشتری  را وارد کنید" Popup=@popup Style="position: absolute;top:40px" />
                        </RadzenFormField>
                   @* <RadzenColumn>
                        <RadzenFormField Text="تاریخ" Variant="Variant.Outlined">
                            <RadzenDatePicker Name="RegisterDate" @bind-Value=@newCustomerModel.RegisterDate ShowTime="true" ShowSeconds="false" HoursStep="1.5" MinutesStep="5" SecondsStep="10" DateFormat="yyyy/MM/dd" />
                            <RadzenRequiredValidator Component="RegisterDate" Text="تاریخ ثبت  مشتری  را وارد کنید" Popup=@popup Style="position: absolute;top:40px" />

                        </RadzenFormField>
                    </RadzenColumn>*@
                </RadzenRow>
                <br />
                <RadzenTemplateForm Context="NewVehicle" TItem="AddNewVehicleModel" Data="newVehicleModel" Submit="OnSubmitNewVehicle" InvalidSubmit="OnInvalidSubmitNewVehicle">

                    <RadzenRow>
                        <RadzenText TextStyle="TextStyle.H6" Text="اضافه کردن خودرو" Style="font-family: Vazirmatn, serif" />
                    </RadzenRow>
                    <RadzenRow  AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceEvenly">
                            <RadzenFormField Text="خودرو" Variant="Variant.Outlined">
                                <RadzenTextBox Name="VehicleName" @bind-Value="newVehicleModel.VehicleName" />
                                <RadzenRequiredValidator Component="VehicleName" Text="عنوان خودرو را وارد کنید" Popup=@popup Style="position: absolute;top:40px" />
                            </RadzenFormField>
                            <RadzenFormField Text="رنگ" Variant="Variant.Outlined">
                                <RadzenTextBox Name="VehicleColor" @bind-Value="newVehicleModel.VehicleColor" />
                                <RadzenRequiredValidator Component="VehicleColor" Text="رنگ خودرو را وارد کنید" Popup=@popup Style="position: absolute;top:40px" />
                            </RadzenFormField>
                    </RadzenRow>
                    <br />
                    <RadzenRow AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceEvenly">
                            <RadzenFormField Text="پلاک" Variant="Variant.Outlined">
                                <RadzenTextBox Name="VehiclePlate" @bind-Value="newVehicleModel.VehiclePlate" />
                                <RadzenRequiredValidator Component="VehiclePlate" Text="پلاک خودرو را وارد کنید" Popup=@popup Style="position: absolute;top:40px" />
                            </RadzenFormField>
                            <RadzenButton ButtonType="Radzen.ButtonType.Submit" Text="افزودن" ButtonStyle="ButtonStyle.Success" Style="width: 200px" />
                    </RadzenRow>
                </RadzenTemplateForm>
            </RadzenColumn>
            <RadzenColumn>
                <RadzenRow>
                    <RadzenText TextStyle="TextStyle.H6" Text="لیست خودروها" Style="font-family: Vazirmatn, serif" />
                </RadzenRow>
                <RadzenRow>
                    @* Customer Vehicle Lists*@
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>عنوان</th>
                                <th>رنگ</th>
                                <th>پلاک</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in vehicles)
                            {
                                <tr>
                                    <td>@item.Name</td>
                                    <td>@item.Color</td>
                                    <td>@item.Plate</td>
                                    <td @onclick="() => RemoveVevhicle(item)" class="text-danger">X</td>
                                </tr>
                            }

                        </tbody>
                    </table>
                </RadzenRow>
            </RadzenColumn>
        </RadzenRow>
        <br /><br />
        <RadzenRow>
            <RadzenColumn></RadzenColumn>
            <RadzenColumn>
                <RadzenRow JustifyContent="JustifyContent.End">
                    <RadzenButton Click="@((args) => navigationManager.NavigateTo("/"))" ButtonStyle="ButtonStyle.Danger" Text="لغو" Style="width: 120px" />
                    <RadzenButton ButtonType="Radzen.ButtonType.Submit" ButtonStyle="ButtonStyle.Success" Text="ثبت" Style="width: 120px" />
                </RadzenRow>
            </RadzenColumn>
        </RadzenRow>
        @error
    </RadzenTemplateForm>

</MudRTLProvider>

@code {
    public class AddNewVehicleModel
    {
        public string VehicleName { get; set; }
        public string VehicleColor { get; set; }
        public string VehiclePlate { get; set; }
    }
    public class AddCustomerModel
    {
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string PhoneNumber { get; set; }
        public DateTime RegisterDate { get; set; }
    }
    private AddCustomerModel newCustomerModel = new();
    private AddNewVehicleModel newVehicleModel = new();
    List<VehicleDTO> vehicles = new();
    private string error = "";
    private bool popup = false;
    private async Task OnSubmitNewCustomer()
    {
        await AddCustomer();
    }
    private void OnInvalidSubmitNewCustomer()
    {

    }
    private void OnSubmitNewVehicle()
    {
        AddVehicle();
    }
    private void OnInvalidSubmitNewVehicle()
    {

    }
    private void RemoveVevhicle(VehicleDTO vehcile)
    {
        vehicles.Remove(vehcile);
    }
    private void AddVehicle()
    {
        VehicleDTO vehicle = new(newVehicleModel.VehicleName, newVehicleModel.VehiclePlate, newVehicleModel.VehicleColor);
        vehicles.Add(vehicle);
        newVehicleModel = new();
    }
    private async Task AddCustomer()
    {
        AddCustomerRequest request = new(newCustomerModel.FirstName, newCustomerModel.LastName, newCustomerModel.PhoneNumber, DateTime.Now, vehicles);
        try
        {
            var response = await mediator.Send(request);
            //show success
            dialogService.Close(true);

        }
        catch (Exception e)
        {
            error = e.Message + "#" + e.InnerException.Message;
            //show error message

        }

    }
    


}