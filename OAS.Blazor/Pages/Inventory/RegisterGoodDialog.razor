@page "/testform"
@using OAS.Domain.Models
@inject IDialogService DialogService
<div class="container-fluid" dir="rtl">
    <div class="row px-3">
        <div class="col-md-6 col-lg-4 p-3">
            <RadzenCard>
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">کد کالا</RadzenText>
                <RadzenTextBox Change=@(args => OnChange(args, "TextBox")) class="w-100"/>
            </RadzenCard>
        </div>
        <div class="col-md-6 col-lg-4 p-3">
            <RadzenCard>
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">نام کالا</RadzenText>
                <RadzenTextBox Placeholder="Search..." Change=@(args => OnChange(args, "TextBox with placeholder")) class="w-100"/>
            </RadzenCard>
        </div>
        <div class="col-md-6 col-lg-4 p-3">
            <RadzenCard>
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">تعداد</RadzenText>
                <RadzenTextBox @bind-Value=@value MaxLength="5" Change=@(args => OnChange(args, "TextBox with 5 maximum characters")) class="w-100"/>
            </RadzenCard>
        </div>
        <div class="col-md-6 col-lg-4 p-3">
            <RadzenCard>
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">قیمت</RadzenText>
                <RadzenTextBox @oninput=@(args => OnChange(args.Value.ToString(), "TextBox with change on every input")) class="w-100"/>
            </RadzenCard>
        </div>
    </div>
</div>
<br/><br/>
<div class="rz-p-12 rz-text-align-center">
    <RadzenAutoComplete @bind-Value=@LastName Data=@customers TextProperty="LastName" Style="width: 13rem" />
    <p>
        @LastName
        @customers.FirstOrDefault(x => x.LastName == LastName)?.Id
        

    </p>
    </div>

<MudButton @onclick="OpenDialog" Variant="MudBlazor.Variant.Filled" Color="Color.Primary">
    Open Simple Dialog
</MudButton>


@code {
    string value;
    


    private void OpenDialog()
    {
        var options = new MudBlazor.DialogOptions { CloseOnEscapeKey = true };
        DialogService.Show<MyDialog>("Simple Dialog", options);
    }
    void OnChange(string value, string name)
    {
        //
    }
    string LastName;

    IEnumerable<Customer> customers;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        customers = new List<Customer>()
        {
            new Customer() { Id = Guid.NewGuid(), FirstName = "Bardia", LastName = "Yaghmaie" },
            new Customer() {Id = Guid.NewGuid(), FirstName = "Mammad", LastName = "Yousefian" }

        };
    }
}