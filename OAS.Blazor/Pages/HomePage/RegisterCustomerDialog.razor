@using OAS.Application.DomainModels;
@using OAS.Application.Features.CustomerFeatures.AddCustomer;
@using Variant = Radzen.Variant
@using AlignItems = Radzen.AlignItems
@inject Radzen.DialogService dialogService
@inject MediatR.IMediator mediator;
<MudRTLProvider RightToLeft="true">
    <RadzenRow>
        <RadzenColumn>
            <RadzenRow>
                <RadzenColumn Size="6">
                    <RadzenFormField Text="نام" Variant="Variant.Outlined">
                        <RadzenTextBox @bind-Value="@CustomerFirstName"/>
                    </RadzenFormField>
                </RadzenColumn>
                <RadzenColumn Size="6">
                    <RadzenFormField Text="نام خانوادگی" Variant="Variant.Outlined">
                        <RadzenTextBox @bind-Value="@CustomerLastName"/>
                    </RadzenFormField>
                </RadzenColumn>
            </RadzenRow>
            <br/>
            <RadzenRow>
                <RadzenColumn>
                    <RadzenFormField Text="موبایل" Variant="Variant.Outlined">
                        <RadzenTextBox @bind-Value="@CustomerPhoneNumber"/>
                    </RadzenFormField>
                </RadzenColumn>
                <RadzenColumn>
                    <RadzenFormField Text="تاریخ" Variant="Variant.Outlined">
                        <RadzenDatePicker @bind-Value=@CustomerRegisterDate ShowTime="true" ShowSeconds="false" HoursStep="1.5" MinutesStep="5" SecondsStep="10" DateFormat="yyyy/MM/dd" />
                    </RadzenFormField>
                </RadzenColumn>
            </RadzenRow>
            <br/>
            <RadzenRow>
                <RadzenText TextStyle="TextStyle.H6" Text="اضافه کردن خودرو" Style="font-family: Vazirmatn, serif"/>
            </RadzenRow>
            <RadzenRow>
                <RadzenColumn>
                    <RadzenFormField Text="خودرو" Variant="Variant.Outlined">
                        <RadzenTextBox @bind-Value="@VehicleName"/>
                    </RadzenFormField>
                </RadzenColumn>
                <RadzenColumn>
                    <RadzenFormField Text="رنگ" Variant="Variant.Outlined">
                        <RadzenTextBox @bind-Value="@VehicleColor"/>
                    </RadzenFormField>
                </RadzenColumn>
            </RadzenRow>
            <br/>
            <RadzenRow AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" >
                <RadzenColumn>
                    <RadzenFormField Text="پلاک" Variant="Variant.Outlined">
                        <RadzenTextBox @bind-Value="@VehiclePlate"/>
                    </RadzenFormField>
                </RadzenColumn>
                <RadzenColumn>
                    <RadzenButton Click="AddVehicle" Text="افزودن" ButtonStyle="ButtonStyle.Success" Style="width: 200px" />
                </RadzenColumn>
            </RadzenRow>
        </RadzenColumn>
        <RadzenColumn>
            <RadzenRow>
                <RadzenText TextStyle="TextStyle.H6" Text="لیست خودروها" Style="font-family: Vazirmatn, serif"/>
            </RadzenRow>
            <RadzenRow>
                @* Customer Vehicle Lists*@
                <ul>

                    @foreach (var item in vehicles)
                    {
                        <li>@($"{item.Name} {item.Color} {item.Plate}")</li>
                    }
                </ul>
            </RadzenRow>
        </RadzenColumn>
    </RadzenRow>
    <br/><br/>
    <RadzenRow>
        <RadzenColumn></RadzenColumn>
        <RadzenColumn>
            <RadzenRow JustifyContent="JustifyContent.End">
                 <RadzenButton Click="@((args) => dialogService.Close(false))" ButtonStyle="ButtonStyle.Danger" Text="لغو" Style="width: 120px"/>
                             <RadzenButton Click="AddCustomer" ButtonStyle="ButtonStyle.Success" Text="ثبت" Style="width: 120px"/>
            </RadzenRow>
        </RadzenColumn>
    </RadzenRow>
</MudRTLProvider>

@code {
    List<VehicleDTO> vehicles = new();
    private void AddVehicle()
    {
        VehicleDTO vehicle = new(VehicleName, VehiclePlate, VehicleColor);
        vehicles.Add(vehicle);
        VehicleName = "";
        VehicleColor = "";
        VehiclePlate = "";
    }
    private async void AddCustomer()
    {
        AddCustomerRequest request = new(CustomerFirstName, CustomerLastName, CustomerPhoneNumber, CustomerRegisterDate, vehicles);
        try
        {
            var response = await mediator.Send(request);
            //show success
            dialogService.Close(true);

        }
        catch (Exception e)
        {
            //show error message
            throw;
        }

    }
    public string CustomerFirstName { get; set; }
    public string CustomerLastName { get; set; }
    public string CustomerPhoneNumber { get; set; }
    public DateTime CustomerRegisterDate { get; set; } = DateTime.UtcNow;
    
    public string VehicleName { get; set; }
    public string VehicleColor { get; set; }
    public string VehiclePlate { get; set; }
    
}